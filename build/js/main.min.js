"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
console.log("░█▀▀▄░█▀▀▀░█▀▀░█░░█▀▀▄░█▀▀▄\n▒█▄▄█░█░▀▄░█▀▀░█░░█▄▄█░█▄▄▀\n▒█░▒█░▀▀▀▀░▀▀▀░▀▀░▀░░▀░▀░▀▀\n Development");
var scrollButton = document.querySelector(".upbtn"),
  mainWrap = document.querySelector(".main"),
  tarrifsContentMoreButton = document.querySelectorAll(".tarrifs-content__more-button"),
  tarrifsTableHidden = document.querySelectorAll(".tarrifs-table--hidden");
function delButtons(e) {
  tarrifsContentMoreButton.forEach(function (e, t) {
    e.classList.add("d-none");
  });
}
tarrifsContentMoreButton.forEach(function (e, t) {
  e.addEventListener("click", function () {
    tarrifsTableHidden.forEach(function (e, t) {
      e.classList.remove("tarrifs-table--hidden");
    }), delButtons(), setHeightCell(document.querySelectorAll(".tarrifs-container .tarrifs-table > div"));
  });
}), mainWrap.addEventListener("scroll", function (e) {
  mainWrap.scrollTop >= 500 ? scrollButton.classList.add("upbtn--active") : scrollButton.classList.remove("upbtn--active");
}), scrollButton.addEventListener("click", function () {
  mainWrap.scrollTo({
    top: 0,
    behavior: "smooth"
  });
}), document.querySelectorAll(".btn-expand").forEach(function (e, t) {
  e.addEventListener("click", function (t) {
    e.classList.toggle("btn-expand--active");
  });
});
var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]')),
  tooltipList = tooltipTriggerList.map(function (e) {
    return new bootstrap.Tooltip(e);
  });
var overflowNew = document.querySelector(".over-new"),
  burgerButton = document.querySelector(".burger-button"),
  sidebarClose = document.querySelector(".sidebar-close");
burgerButton.addEventListener("click", taggleButton);
var sidebar = document.querySelector(".sidebar");
function taggleButton() {
  this.classList.toggle("change"), sidebar.classList.toggle("show"), overflowNew.classList.add("active");
}
if (overflowNew.addEventListener("click", function () {
  burgerButton.classList.remove("change"), sidebar.classList.remove("show"), overflowNew.classList.remove("active");
}), sidebarClose && sidebarClose.addEventListener("click", function () {
  burgerButton.classList.remove("change"), sidebar.classList.remove("show"), overflowNew.classList.remove("active");
}), function (e) {
  e.getElementById("menu") && new SimpleBar(e.getElementById("menu"));
}(document), function (e) {
  var t = e.getElementById("sidebar-scroll");
  t && new SimpleBar(t);
}(document), function (e) {
  var t = e.querySelector(".spec-cont");
  t && new SimpleBar(t);
}(document), new SimpleBar(document.getElementById("menu")), new SimpleBar(document.getElementById("sidebar-scroll")), document.querySelector(".spec-cont") && new SimpleBar(document.querySelector(".spec-cont")), document.querySelector(".partners-slider")) {
  new Swiper(".partners-slider", {
    grabCursor: !0,
    navigation: {
      nextEl: ".slider-partners-next",
      prevEl: ".slider-partners-prev"
    },
    preloadImages: !1,
    watchSlidesProgress: !0,
    lazy: !0,
    breakpoints: {
      320: {
        slidesPerView: "auto"
      },
      425: {
        slidesPerView: 2
      },
      768: {
        slidesPerView: 4
      },
      1024: {
        slidesPerView: 5
      },
      1440: {
        slidesPerView: 7
      },
      2560: {
        slidesPerView: 11
      }
    }
  });
}
if (document.querySelector(".certificates-slider") && lightGallery(document.querySelector(".certificates-slider"), {
  selector: ".js_gal",
  thumbnail: !0,
  animateThumb: !0,
  showThumbByDefault: !0
}), document.querySelector(".case-gallery") && lightGallery(document.querySelector(".case-gallery"), {
  selector: ".js_gal",
  thumbnail: !0,
  animateThumb: !0,
  showThumbByDefault: !0
}), document.querySelector(".certificates-slider")) {
  new Swiper(".certificates-slider", {
    grabCursor: !0,
    navigation: {
      nextEl: ".slider-certificates-next",
      prevEl: ".slider-certificates-prev"
    },
    slidesPerView: 8,
    preloadImages: !1,
    lazy: !0,
    watchSlidesVisibility: !0,
    watchSlidesProgress: !0,
    breakpoints: {
      320: {
        spaceBetween: 15,
        slidesPerView: "auto"
      },
      425: {
        slidesPerView: 4
      },
      992: {
        spaceBetween: 30
      }
    }
  });
}
if (document.querySelector(".slider-stock")) {
  new Swiper(".slider-stock", {
    grabCursor: !0,
    slidesPerView: "auto",
    spaceBetween: 0
  });
}
if (document.querySelector(".slider-stuff")) {
  new Swiper(".slider-stuff", {
    slidesPerView: "auto",
    grabCursor: !0,
    navigation: {
      nextEl: ".slider-stuff-next",
      prevEl: ".slider-stuff-prev"
    },
    preloadImages: !1,
    lazy: !0,
    watchSlidesProgress: !0,
    breakpoints: {
      320: {
        spaceBetween: 0
      },
      992: {
        spaceBetween: 15
      }
    }
  });
}
if (document.querySelector(".slider-tech")) {
  new Swiper(".slider-tech", {
    slidesPerView: "auto",
    grabCursor: !0,
    preloadImages: !1,
    lazy: !0,
    watchSlidesProgress: !0,
    breakpoints: {
      320: {
        spaceBetween: 0
      },
      992: {
        spaceBetween: 15
      }
    }
  });
}
function PaginatorSwiper(e) {
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  this.swiper = e, this.defaultStartIndex = t.defaultStartIndex ? t.defaultStartIndex : 2, this.defaultLastIndex = t.defaultLastIndex ? t.defaultLastIndex : 5, this.startIndex = this.defaultStartIndex, this.lastIndex = this.defaultLastIndex, this.clsNext = "swiper-content-pag-next", this.clsPrev = "swiper-content-pag-prev", this.clsFirst = "swiper-content-pag-first", this.clsLast = "swiper-content-pag-last", this.init = function () {}, this.renderBullet = function (e, t) {
    var s = e + 1;
    if (1 == s) return "<a href=\"#\" class=\"".concat(t, "\" data-index=\"").concat(s, "\">").concat(s, "</a>");
    if (s == this.swiper.slides.length) return "<a href=\"#\" class=\"".concat(t, " ").concat(this.clsLast, " \" data-index=\"").concat(s, "\">").concat(s, "</a>");
    var i = "";
    return s === this.startIndex ? i = this.clsPrev : s === this.startIndex + 3 && (i = this.clsNext), s >= this.startIndex && s <= this.startIndex + 3 ? "<a href=\"#\" class=\"".concat(t, " ").concat(i, "\" data-index=\"").concat(s, "\">").concat(s, "</a>") : "<a href=\"#\" class=\"".concat(t, "\" style=\"display:none\" data-index=\"").concat(s, "\">").concat(s, "</a>");
  }, this.paginationUpdate = function (e, t) {
    if (e.slides.length < this.defaultLastIndex) return;
    var s = t.querySelector(".swiper-pagination-bullet-active");
    if (s.classList.contains(this.clsPrev)) {
      if (1 == s.previousSibling.innerHTML) return void (this.startIndex = this.defaultStartIndex);
      s.previousSibling.style.display = "", s.previousSibling.classList.add(this.clsPrev), s.classList.remove(this.clsPrev), this.startIndex--;
      var i = t.querySelector(".swiper-pagination-bullet[data-index='" + this.lastIndex + "']");
      i && i.innerHTML != e.slides.length && (i.style.display = "none", i.classList.remove(this.clsNext), i.previousSibling.classList.add(this.clsNext), this.lastIndex--);
    }
    if (s.classList.contains(this.clsNext)) {
      if (s.previousSibling.innerHTML == e.slides.length) return;
      s.nextSibling.style.display = "", s.nextSibling.classList.add(this.clsNext), s.classList.remove(this.clsNext);
      var _i = t.querySelector(".swiper-pagination-bullet[data-index='" + this.startIndex + "']");
      _i && 1 != _i.innerHTML && s.nextSibling.dataset.index != e.slides.length && (this.startIndex++, _i.style.display = "none", _i.classList.remove(this.clsPrev), _i.nextSibling.classList.add(this.clsPrev), this.lastIndex++);
    }
    if (1 == s.dataset.index && this.startIndex != this.defaultStartIndex) {
      for (var _e = this.startIndex; _e <= this.lastIndex; _e++) {
        var _s = t.querySelector(".swiper-pagination-bullet[data-index='" + _e + "']");
        _e == this.startIndex && _s.classList.remove(this.clsPrev), _s.style.display = "none", _e == this.lastIndex && _s.classList.remove(this.clsNext);
      }
      for (var _e2 = this.defaultStartIndex; _e2 <= this.defaultLastIndex; _e2++) {
        var _s2 = t.querySelector(".swiper-pagination-bullet[data-index='" + _e2 + "']");
        _e2 == this.defaultStartIndex && _s2.classList.add(this.clsPrev), _s2.style.display = "", _e2 == this.defaultLastIndex && _s2.classList.add(this.clsNext);
      }
      startIndex = this.defaultStartIndex, lastIndex = this.defaultLastIndex;
    }
    if (s.dataset.index == e.slides.length) {
      var _e3 = s.dataset.index - 1;
      if (this.lastIndex != s.dataset.index - 1) {
        var _i2 = this.lastIndex,
          r = this.startIndex;
        for (var _e4 = r; _e4 <= _i2; _e4++) {
          var _s3 = t.querySelector(".swiper-pagination-bullet[data-index='" + _e4 + "']");
          _e4 == r && _s3.classList.remove(this.clsPrev), _s3.style.display = "none", _e4 == _i2 && _s3.classList.remove(this.clsNext);
        }
        _i2 = s.dataset.index - 1 - (this.defaultLastIndex - this.defaultStartIndex);
        for (var _s4 = _e3; _s4 >= _i2; _s4--) {
          var _r = t.querySelector(".swiper-pagination-bullet[data-index='" + _s4 + "']");
          _s4 == _e3 && _r.classList.add(this.clsNext), _r.style.display = "", _s4 == _i2 && _r.classList.add(this.clsPrev);
        }
        this.startIndex = _i2, this.lastIndex = _e3;
      }
    }
  };
}
if (function (e) {
  if (e.querySelector(".service-content-slider")) {
    new Swiper(".service-content-slider", {
      slidesPerView: 1,
      grabCursor: !0,
      autoHeight: !0,
      navigation: {
        nextEl: ".service-content-slider-next",
        prevEl: ".service-content-slider-prev"
      },
      pagination: {
        el: ".service-content-slider-pag",
        dynamicBullets: !0,
        clickable: !0,
        renderBullet: function renderBullet(e, t) {
          return this.paginator.renderBullet(e, t);
        }
      },
      on: {
        beforeInit: function beforeInit() {
          this.paginator = new PaginatorSwiper(this);
        },
        init: function init() {
          this.paginator.init();
        },
        paginationUpdate: function paginationUpdate(e, t) {
          this.paginator.paginationUpdate(e, t);
        }
      }
    });
  }
}(document), document.querySelector(".slider-top")) {
  new Swiper(".slider-top", {
    slidesPerView: 1,
    autoplay: {
      delay: 2e3
    },
    grabCursor: !0,
    pagination: {
      el: ".swiper-slider-top",
      clickable: !0,
      renderBullet: function renderBullet(e, t) {
        return "<a href=\"#\" class=\"".concat(t, "\"></a>");
      }
    }
  });
}
if (document.querySelector(".tarrifs-slider")) {
  new Swiper(".tarrifs-slider", {
    slidesPerView: "auto",
    grabCursor: !0,
    breakpoints: {
      320: {
        spaceBetween: 5
      }
    }
  });
}
if (document.querySelector(".slider-cases-box")) {
  new Swiper(".slider-cases-box", {
    slidesPerView: "auto",
    grabCursor: !0,
    navigation: {
      nextEl: ".slider-cases-next",
      prevEl: ".slider-cases-prev",
      disabledClass: "disabled-swiper-button"
    },
    preloadImages: !1,
    watchSlidesProgress: !0,
    lazy: {
      enabled: !0,
      loadPrevNext: !0
    }
  });
}
if (document.querySelector(".articles-slider")) {
  new Swiper(".articles-slider", {
    slidesPerView: "auto",
    grabCursor: !0,
    preloadImages: !1,
    lazy: !0,
    watchSlidesProgress: !0,
    navigation: {
      nextEl: ".swiper-button-prev",
      prevEl: ".swiper-button-next"
    },
    breakpoints: {
      320: {
        spaceBetween: 15
      }
    }
  });
}
if (document.querySelector(".budges-slider-min")) {
  new Swiper(".budges-slider-min", {
    slidesPerView: "auto",
    grabCursor: !0,
    breakpoints: {
      320: {
        spaceBetween: 0
      },
      992: {
        spaceBetween: 15
      }
    }
  });
}
if (document.querySelector(".simple-budge-slider")) {
  new Swiper(".simple-budge-slider", {
    spaceBetween: 20,
    slidesPerView: "auto",
    grabCursor: !0,
    breakpoints: {}
  });
}
var ItcTabs = /*#__PURE__*/function () {
  function ItcTabs(e, t) {
    _classCallCheck(this, ItcTabs);
    this._config = Object.assign({}, t), this._elTabs = "string" == typeof e ? document.querySelector(e) : e, this._elButtons = this._elTabs.querySelectorAll(".tabs__btn"), this._elPanes = this._elTabs.querySelectorAll(".tabs__pane"), this._eventShow = new Event("tab.itc.change"), this._init(), this._events();
  }
  _createClass(ItcTabs, [{
    key: "_init",
    value: function _init() {
      var _this = this;
      this._elTabs.setAttribute("role", "tablist"), this._elButtons.forEach(function (e, t) {
        e.dataset.index = t, e.setAttribute("role", "tab"), _this._elPanes[t].setAttribute("role", "tabpanel");
      });
    }
  }, {
    key: "show",
    value: function show(e) {
      var t = this._elPanes[e.dataset.index],
        s = this._elTabs.querySelector(".tabs__btn--active"),
        i = this._elTabs.querySelector(".tabs__pane--show");
      e !== s && (s && s.classList.remove("tabs__btn--active"), i && i.classList.remove("tabs__pane--show"), e.classList.add("tabs__btn--active"), t.classList.add("tabs__pane--show"), this._elTabs.dispatchEvent(this._eventShow), e.focus());
    }
  }, {
    key: "showByIndex",
    value: function showByIndex(e) {
      var t = this._elButtons[e];
      t && this.show(t);
    }
  }, {
    key: "_events",
    value: function _events() {
      var _this2 = this;
      this._elTabs.addEventListener("click", function (e) {
        var t = e.target.closest(".tabs__btn");
        t && (e.preventDefault(), _this2.show(t));
      });
    }
  }]);
  return ItcTabs;
}();
var tabs = document.querySelectorAll(".tabs");
if (tabs.forEach(function (e, t) {
  new ItcTabs(tabs[t]);
}), document.querySelector(".reviews-text-slider")) {
  new Swiper(".reviews-text-slider", {
    slidesPerView: "auto",
    lazy: !0,
    preloadImages: !1,
    watchSlidesProgress: !0,
    grabCursor: !0,
    breakpoints: {
      320: {
        spaceBetween: 15
      },
      1200: {
        spaceBetween: 30
      }
    }
  });
}
if (document.querySelector(".slider-case")) {
  new Swiper(".slider-case", {
    slidesPerView: 1,
    grabCursor: !0,
    autoHeight: !0,
    preloadImages: !1,
    lazy: !0,
    breakpoints: {
      320: {
        spaceBetween: 15
      },
      1200: {
        spaceBetween: 30
      }
    },
    navigation: {
      nextEl: ".slider-case-content-slider-next",
      prevEl: ".slider-case-content-slider-prev"
    },
    pagination: {
      el: ".slider-case-content-slider-pag",
      clickable: !0,
      renderBullet: function renderBullet(e, t) {
        return this.paginator.renderBullet(e, t);
      }
    },
    on: {
      beforeInit: function beforeInit() {
        this.paginator = new PaginatorSwiper(this);
      },
      init: function init() {
        this.paginator.init();
      },
      paginationUpdate: function paginationUpdate(e, t) {
        console.log(e), this.paginator.paginationUpdate(e, t);
      }
    }
  });
}
if (document.querySelector(".solutions-slider")) {
  new Swiper(".solutions-slider", {
    slidesPerView: "auto",
    grabCursor: !0,
    preloadImages: !1,
    watchSlidesProgress: !0,
    lazy: !0,
    breakpoints: {
      320: {
        spaceBetween: 15
      },
      1200: {
        spaceBetween: 30
      }
    }
  });
}
if (document.querySelector(".reviews-video-slider")) {
  new Swiper(".reviews-video-slider", {
    slidesPerView: "auto",
    grabCursor: !0,
    breakpoints: {
      320: {
        spaceBetween: 15
      },
      1200: {
        spaceBetween: 30
      }
    }
  });
}
function setEffect(e) {
  e.forEach(function (e, t) {
    var s = e.clientHeight,
      i = e.clientWidth;
    e.addEventListener("mousemove", function (t) {
      var r = t.layerX,
        a = "transform: perspective(500px) scale(1.1) rotateX(" + (t.layerY - s / 2) / s * -20 + "deg) rotateY(" + (r - i / 2) / i * 10 + "deg); transition: .1s ease";
      e.style.cssText = a;
    }), e.addEventListener("mouseout", function () {
      e.style.cssText = "transform: perspective(500px) scale(1) rotateX(0) rotateY(0); transition: .1s ease";
    }), e.addEventListener("mousedown", function () {
      e.style.cssText = "transform :perspective(500px) scale(0.9) rotateX(0) rotateY(0); transition: .1s ease";
    }), e.addEventListener("mouseup", function () {
      e.style.transform = "transform :perspective(500px) scale(1.1) rotateX(0) rotateY(0)";
    });
  });
}
document.querySelectorAll(".tariff-btn").forEach(function (e, t) {
  e.addEventListener("click", function () {
    var t = e.querySelector("span");
    "Что входит" == t.textContent ? (t.textContent = "Свернуть", t.nextElementSibling.style.display = "none") : (t.textContent = "Что входит", t.nextElementSibling.style.display = "");
  });
});
var elemEffect = document.querySelectorAll(".cases-page .box-case");
function setHeightCell(e) {
  if (!e) return;
  var t = 0;
  return e && (e.forEach(function (e) {
    e.style.height = "auto", e.offsetHeight > t && (t = e.offsetHeight);
  }), e.forEach(function (e) {
    e.style.height = t + "px";
  })), t;
}
function onClearErrorForm(e) {
  e.querySelectorAll(".error").forEach(function (e, t) {
    e.remove();
  });
}
elemEffect && setEffect(elemEffect), setHeightCell(document.querySelectorAll(".tarrifs-container .tarrifs-table > div")), function (e) {
  e.querySelectorAll("[data-open-form]").forEach(function (t) {
    t.addEventListener("click", function () {
      var t = e.querySelector(this.dataset.bsTarget);
      if (t) {
        var s = t.querySelector("[data-form-place-title]");
        s && (s.innerHTML = this.dataset.formTitle);
        var i = t.querySelector("form");
        if (i && s) {
          var _t = e.createElement("input");
          _t.setAttribute("type", "hidden"), _t.setAttribute("name", "nameForm"), _t.value = this.dataset.formTitle, i.appendChild(_t);
        }
      }
    });
  });
}(document), function (e) {
  var t = e.getElementById("n-reviews-gall");
  t && lightGallery(t, {
    selector: ".js_gal",
    thumbnail: !0,
    animateThumb: !0,
    showThumbByDefault: !0
  });
}(document), function (e) {
  var t;
  e.querySelector(".spin-overlap") && (t = e.querySelector(".spin-overlap"));
  var s = e.querySelector(".show_more_cases");
  function i() {
    e.querySelectorAll(".box-case__bg-image").forEach(function (t) {
      var s = e.createElement("img");
      s.src = t.dataset.src, s.setAttribute("class", t.getAttribute("class")), s.addEventListener("load", function () {
        t.parentNode.insertBefore(s, t);
        var e = t.parentNode.querySelector(".spin-overlap");
        e && e.remove(), t.remove();
      });
    });
  }
  s && s.addEventListener("click", function () {
    var _this3 = this;
    var s = this.getAttribute("data-id"),
      r = this.getAttribute("data-shift"),
      a = this.dataset.defaultShift;
    t.classList.add("spin-overlap--active"), function (e) {
      var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      return $.post("/assets/templates/agelar/getCases.php", {
        id: e,
        shift: t
      });
    }(s, r).then(function (t) {
      if (t = JSON.parse(t), console.log(t), "" != t.data) {
        e.querySelector(".casesList").innerHTML += t.data, _this3.setAttribute("data-shift", Number(r) + Number(a)), t.nextData || (_this3.style.display = "none");
      }
      return t;
    }).then(function (e) {
      t.classList.remove("spin-overlap--active"), i();
    });
  }), i();
}(document), $(document).on("af_complete", function (e, t) {
  if (t.success) t.form[0].classList.remove("error"), onClearErrorForm(form);else {
    t.form[0].classList.add("error"), onClearErrorForm(t.form[0]);
    for (var _e5 in t.data) {
      var s = t.form[0].querySelector("[name=".concat(_e5, "]"));
      console.log(s), s && s.insertAdjacentHTML("afterend", "" + t.data[_e5]);
    }
  }
});
var sidebarLinks = document.querySelectorAll(".nav-sidebar .top_menu ul > .level1");
sidebarLinks.forEach(function (e, t) {
  if (!e.querySelector("ul")) {
    console.log(e.querySelector("ul"));
    var _t2 = e.querySelector(".nav-sidebar__link-arrow");
    _t2 && _t2.remove();
  }
});
var tarrifElem = document.querySelectorAll(".tarrifs-table-min");
function return_to_initial_page(e, t) {
  window.localStorage.setItem("statusBtnBack", 1), (e = new URL(e)).searchParams.set("id", t), window.location.href = e;
}
tarrifElem && tarrifElem[2] && tarrifElem[2].querySelectorAll("div:nth-child(odd)").forEach(function (e, t) {
  e.style.cssText = "background-color: #880000;mix-blend-mode: normal;color: white!important;";
}), document.addEventListener("DOMContentLoaded", function () {
  var e = new URL(location.href).searchParams.get("id"),
    t = document.querySelector("[data-position='" + e + "'");
  t && (console.log($(t).offset().top), $("main").animate({
    scrollTop: $(t).offset().top
  }));
});
var sldeCaseScrollBarForImage = document.querySelectorAll(".site-cases .cont-case-image, .style-cases .cont-case-image, .mobile-cases .cont-case-image, .redesign-cases .cont-case-image");
var calcModal;
function Calculator(e, t) {
  var s = {
    classSwiper: "",
    swiperOptions: {},
    classBtnSlidePrev: ".quiz-slider-prev",
    classBtnSlideNext: ".quiz-slider-next",
    classAnswersElement: ".quest-answer",
    classBtnPagination: ".quiz-buttons",
    classDiscount: ".discount",
    classPagination: ".quiz-pag"
  };
  function i(e) {
    this.discount = 1, this.classDiscount = t.classDiscount, this.element = e, this.questsBase = [], this.form = this.element.querySelector("form"), this.init = function () {
      var _this4 = this;
      this.element.clear = this.clear.bind(this);
      var e = this.element.querySelectorAll(t.classAnswersElement);
      this.swiper = this.element.querySelector(t.classSwiper).swiper, this.setDiscount(this.discount), e && e.forEach(function (e) {
        e.addEventListener("click", function (e) {
          -1 == _this4.questsBase.indexOf(e.target.getAttribute("name")) ? (_this4.questsBase.push(e.target.getAttribute("name")), _this4.setDiscount(_this4.discount + Number(_this4.swiper.slides[_this4.swiper.activeIndex].dataset.discount))) : -1 != _this4.questsBase.indexOf(e.target.getAttribute("name")) && (_this4.isValidQuest(e.target.dataset.group) || (delete _this4.questsBase[_this4.questsBase.indexOf(e.target.getAttribute("name"))], _this4.setDiscount(_this4.discount - Number(his.swiper.slides[_this4.swiper.activeIndex].dataset.discount))));
        });
      }), this.pagination(), this.paginationBtn(), this.form && this.form.addEventListener("agelar-form-success", function () {
        _this4.clear();
      });
    }, this.clear = function () {
      this.questsBase = [], this.setDiscount(1), this.element.querySelector(t.classSwiper).swiper.slideTo(0, 10), this.element.querySelector(t.classBtnPagination).style.display = "", this.form && this.form.reset();
    }, this.setDiscount = function (e) {
      this.discount = e, this.element.querySelectorAll(this.classDiscount).forEach(function (t) {
        t.innerHTML = e;
      });
    }, this.paginationBtn = function () {
      var _this5 = this;
      var e = this.element.querySelector(t.classBtnSlidePrev);
      e && e.addEventListener("click", function (e) {
        _this5.swiper.slideTo(_this5.swiper.activeIndex - 1, 10);
      });
      var s = this.element.querySelector(t.classBtnSlideNext);
      s && s.addEventListener("click", function (e) {
        if (!_this5.isError(_this5.swiper.activeIndex)) {
          var _e6 = _this5.swiper.activeIndex + 1;
          _this5.element.querySelector(t.classSwiper).swiper.slideTo(_e6, 10), _e6 == _this5.swiper.slides.length - 1 && (_this5.element.querySelector(t.classBtnPagination).style.display = "none");
        }
      });
    }, this.pagination = function () {
      var _this6 = this;
      var e = this.element.querySelector(t.classPagination),
        s = "swiper-pagination-bullet-active";
      if (e) for (var _t3 = 0; _t3 < this.swiper.slides.length; _t3++) {
        var _i3 = "";
        _t3 == this.swiper.activeIndex && (_i3 = s), e.innerHTML += this.renderPagination(_t3, _i3);
      }
      var i = 0;
      function r(e, s) {
        console.log(e, s.swiper.slides.length, e < s.swiper.slides.length - 1, s.element.querySelector(t.classBtnPagination)), e < s.swiper.slides.length - 1 ? s.element.querySelector(t.classBtnPagination).style.display = "" : s.element.querySelector(t.classBtnPagination).style.display = "none";
      }
      e.offsetWidth > e.parentElement.offsetWidth && (e.parentElement.style.justifyContent = "initial", i = e.parentElement.offsetWidth / 2 - (e.children[1].offsetLeft + e.children[1].offsetWidth) + (e.children[1].offsetLeft + e.children[1].offsetWidth) / 2, e.style.transform = "translateX(".concat(i, "px)")), this.swiper.on("activeIndexChange", function () {
        var t = e.querySelector("." + s);
        t && t.classList.remove(s);
        var r = e.querySelector("[data-index='" + _this6.swiper.activeIndex + "']");
        r && r.classList.add(s), e.offsetWidth > e.parentElement.offsetWidth && (console.log(i, r.offsetLeft + r.offsetWidth), i = e.parentElement.offsetWidth / 2 - (r.offsetLeft + r.offsetWidth) + (r.offsetWidth / 2 - 5), console.log(i), e.style.transform = "translateX(".concat(i, "px)"));
      }), e.querySelectorAll("[data-index]").forEach(function (e) {
        e.addEventListener("click", function (e) {
          var t = e.target.dataset.index,
            s = t > _this6.swiper.activeIndex ? t - 1 : _this6.swiper.activeIndex;
          (t > _this6.swiper.activeIndex && _this6.isValidQuest(s) || t < _this6.swiper.activeIndex) && (_this6.swiper.slideTo(t, 10), r(t, _this6));
        });
      });
    }, this.renderPagination = function (e, t) {
      return "<div class=\"quiz-pag__box ".concat(t, "\" data-index=\"").concat(e, "\" style=\"cursor:pointer\"><span>").concat(e + 1, "</span></div><div class=\"quiz-pag__line\"></div>");
    }, this.isError = function (e) {
      return !this.isValidQuest(e) && (this.errorNextSlide(), !0);
    }, this.errorNextSlide = function () {
      calcModal.show();
    }, this.errorSiteName = function () {
      calcModal.show();
    }, this.isValidSiteName = function (e) {
      var t = this.element.querySelector(".site_name_" + e);
      return !t || "" != t.value;
    }, this.isValidQuest = function (e) {
      console.log(e);
      var t = !1;
      return this.element.querySelectorAll("[data-group='" + e + "']").forEach(function (e) {
        if (e.checked) return t = !0, 1;
      }), t;
    }, this.init();
  }
  this.init = function () {
    for (optionKey in s) {
      t[optionKey] || (t[optionKey] = s[optionKey]);
    }
    if ("" == t.classSwiper) return console.log("Calculator: Не определён swiper slider"), 1;
    this.swiper = new Swiper(t.classSwiper, t.swiperOptions), document.querySelectorAll(e).forEach(function (e, t) {
      var s = new i(e);
      e.calculator = s;
    });
  }, this.init();
}
sldeCaseScrollBarForImage && sldeCaseScrollBarForImage.forEach(function (e) {
  new SimpleBar(e);
}), document.getElementById("calcModal") && (calcModal = new bootstrap.Modal(document.getElementById("calcModal"), {}));
var calculator = new Calculator(".calculator", {
  classSwiper: ".quiz-slider",
  swiperOptions: {
    slidesPerView: 1,
    autoHeight: !0,
    allowTouchMove: !1,
    grabCursor: !0,
    breakpoints: {
      320: {
        spaceBetween: 15
      },
      575: {},
      992: {
        spaceBetween: 30
      }
    }
  }
});
var CalculatorV2 = /*#__PURE__*/function () {
  function CalculatorV2(e) {
    _classCallCheck(this, CalculatorV2);
    e && (this.elementDom = e, this.eventSubmit());
  }
  _createClass(CalculatorV2, [{
    key: "eventSubmit",
    value: function eventSubmit() {
      var _this7 = this;
      var e = this.elementDom.querySelector("[type='submit']");
      e && e.addEventListener("click", function (e) {
        console.log(e.target.dataset);
        var t = e.target.dataset.bsTarget,
          s = document.querySelector(t + " form");
        if (s) {
          s.querySelectorAll(".modify-input--js").forEach(function (e) {
            e.remove();
          }), _this7.elementDom.querySelectorAll("input").forEach(function (e) {
            if ("checkbox" == e.type && !e.checked) return;
            var t = e.cloneNode(!0);
            t.setAttribute("type", "hidden"), t.classList.add("modify-input--js"), s.appendChild(t);
          });
        }
      });
    }
  }]);
  return CalculatorV2;
}();
new CalculatorV2(document.querySelector(".calculator-v2--js"));